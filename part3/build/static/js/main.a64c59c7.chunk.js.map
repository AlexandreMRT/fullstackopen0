{"version":3,"sources":["Services/personService.js","Components/Person.js","Components/Persons.js","Components/Filter.js","Components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Person","person","persons","setPersons","setErrorMessage","name","number","onClick","window","confirm","personService","filter","setTimeout","Persons","map","key","Filter","HandleFilterChange","value","onChange","Notification","message","type","className","Form","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","App","useState","setNewName","setNewNumber","setFilter","peopleToShow","toUpperCase","includes","setMessage","errorMessage","useEffect","then","response","data","event","target","preventDefault","nameObject","foundPerson","find","catch","error","n","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a64c59c7.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\nimport personService from '../Services/personService';\n\nconst Person = ({ person, persons, setPersons, setErrorMessage }) => {\n\n  const deletePerson = (id) => {\n      personService\n      .remove(id)\n      setPersons(persons.filter(person => person.id !== id))\n      setErrorMessage(`Removed '${person.name}'`)\n      setTimeout(() => {\n        setErrorMessage(null)                \n      }, 3000)\n  }\n\n  return (\n    <div>{person.name} {person.number}\n      <button  onClick={() => { if  (window.confirm(`Delete ${person.name} ?`))  deletePerson(person.id)} }>\n        Delete\n      </button>\n    </div>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person';\n\nconst Persons = ({ persons, setPersons, setErrorMessage }) => {\n  return (\n    <div>\n      {persons.map(person => \n        <Person key={person.name} person={person} persons={persons} setPersons={ setPersons } setErrorMessage={setErrorMessage} />\n      )}\n    </div>\n  )\n}\n\nexport default Persons;","import React from 'react';\n\nconst Filter = ({ filter,  HandleFilterChange }) => {\n  return (\n    <div>\n      filter shown with\n      <input\n        value={filter} \n        onChange={HandleFilterChange}\n      />\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react';\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={`${type}`}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport Persons from './Components/Persons';\nimport Filter from './Components/Filter';\nimport Notification from './Components/Notification';\nimport personService from './Services/personService';\n\nconst Form = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n  return (\n    <form onSubmit={addPerson}>\n        <div>\n          name: <input\n          value={newName}\n          onChange={handleNameChange}\n           />\n        </div>\n        <div>\n          number: <input\n          value={newNumber}\n          onChange={handleNumberChange}\n           />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const peopleToShow = (persons.filter(person => person.name.toUpperCase().includes(filter.toUpperCase())))\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const foundPerson = (persons.find(person => person.name === newName))\n\n    if (foundPerson) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the older number with a new one ?`)) {\n\n        personService\n          .update(foundPerson.id, nameObject)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== foundPerson.id ? person : response.data))\n            setMessage(`Updated '${newName}' `)\n            setTimeout(() => {\n              setMessage(null)\n            }, 3000)\n          })\n          .catch(error => {\n            setErrorMessage(\n              `The note '${foundPerson.name}' was already deleted from server`\n            )\n            setPersons(persons.filter(n => n.id !== foundPerson.id))\n          })\n        }\n    } else {\n      personService\n        .create(nameObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setMessage(`Added '${newName}' `)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3000)\n        })\n      }\n      setNewName('')\n      setNewNumber('')\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const HandleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} type={\"error\"} />\n      <Notification message={message} type={\"succes\"} />\n      <Filter filter={filter} HandleFilterChange={HandleFilterChange} />\n      <h2>Add a new</h2>\n      <Form addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons persons={peopleToShow} setPersons={setPersons} setErrorMessage={setErrorMessage} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}